<Window x:Class="Chess_game.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Chess_game"
        xmlns:difficultyNamespace="clr-namespace:Chess_game.Models"
        xmlns:convertersNamespace="clr-namespace:Chess_game.Converters"
        xmlns:extensionNamespace="clr-namespace:Chess_game.Extensions"
        
        Background="{Binding CurrentTheme.WindowBackgroundColor, Mode=OneWay}"
        
        xmlns:media="clr-namespace:System.Windows.Media;assembly=PresentationCore"
        mc:Ignorable="d"
        
        d:DataContext="{d:DesignInstance local:MainWindow}"
        

    WindowStartupLocation="CenterScreen"
    Icon="Assets/icon.ico"
    Title="Chess Game" Height="500" Width="820">
        <!--Icon="Assets/icon.ico"-->

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    </Window.Resources>


    <Viewbox>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="60"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250"></ColumnDefinition>
                <ColumnDefinition Width="320"></ColumnDefinition>
                <ColumnDefinition Width="250"></ColumnDefinition>
            </Grid.ColumnDefinitions>


            <Border Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Left"
                    Width="160" Height="30"
                    CornerRadius="10"
                    Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                    BorderThickness="1" BorderBrush="Black"
                    Visibility="{Binding GameSession.IsMovesLimitOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                    Margin="10,10,10,0">
                <StackPanel x:Name="MovesLeft_StackPanel" 
                            Orientation="Horizontal"
                            VerticalAlignment ="Center" >
                    <TextBlock FontSize ="20" FontWeight="DemiBold"  Text="Moves left: " Margin="5,0,0,0"></TextBlock>
                    <TextBlock FontSize ="20" FontWeight="DemiBold" x:Name="MovesLeft_TextBlock" Text="{Binding GameSession.MovesLeft}"
                               Foreground="{Binding GameSession.MovesLeft, Converter={StaticResource NumberOfMovesLeft_ToColor_Converter}}"></TextBlock>
                </StackPanel>
            </Border>



            <!--MENU ITEMS-->
            <Menu Grid.Row="0" Grid.Column="0" FontSize="15"  VerticalAlignment="Top" Grid.ColumnSpan="3" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality"
                  BorderBrush="Black" BorderThickness="1" Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}" RenderOptions.EdgeMode="Aliased">

                <MenuItem Header="New Game" BorderThickness="1" BorderBrush="Black" Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}" >
                    
                    <!--PLAY AS AND GAME MODE TYPE-->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150"></ColumnDefinition>
                            <ColumnDefinition Width="90"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"></RowDefinition>
                            <RowDefinition Height="22"></RowDefinition>
                            <RowDefinition Height="22"></RowDefinition>
                            <RowDefinition Height="22"></RowDefinition>
                        </Grid.RowDefinitions>

                        <!--PLAY AS-->
                        <TextBlock Grid.Row="0" Grid.Column="0" FontWeight="DemiBold">Play as:</TextBlock>
                        <RadioButton x:Name="Play_As_White_RadioButton" GroupName="Play_As_GroupName" Grid.Row="1" Grid.Column="0"
                                     Checked="OnPlayAsWhite_RadioButtonChecked">White</RadioButton>
                        <RadioButton x:Name="Play_As_Black_RadioButton" GroupName="Play_As_GroupName" Grid.Row="2" Grid.Column="0"
                                     Checked="OnPlayAsBlack_RadioButtonChecked">Black</RadioButton>
                        <RadioButton x:Name="Play_As_Random_RadioButton" GroupName="Play_As_GroupName" Grid.Row="3" Grid.Column="0"
                                     Checked="OnPlayAsRandom_RadioButtonChecked">Random</RadioButton>

                        <!--GAME MODE-->
                        <TextBlock Grid.Row="0" Grid.Column="1" FontWeight="DemiBold">Game type:</TextBlock>
                        <RadioButton x:Name="GameType_PvP" Content="PvP" ToolTipService.InitialShowDelay="100" Grid.Row="1" Grid.Column="1"
                                 GroupName="Game_Type_GroupName" Checked="OnGameType_PvP_Checked">
                            <RadioButton.ToolTip>
                                <ToolTip Content="Player vs Player" Style="{StaticResource LargeToolTipStyle}"
                                         Background="{Binding CurrentTheme.ToolTipColor, Mode=OneWay}"
                                         Foreground="{Binding CurrentTheme.ToolTipTextColor, Mode=OneWay}"/>
                            </RadioButton.ToolTip>
                        </RadioButton>
                        <RadioButton x:Name="GameType_PvE"  Content="PvE" ToolTipService.InitialShowDelay="100" Grid.Row="2" Grid.Column="1"
                                 GroupName="Game_Type_GroupName" Checked="OnGameType_PvE_Checked">
                            <RadioButton.ToolTip>
                                <ToolTip Content="Player vs Computer" Style="{StaticResource LargeToolTipStyle}"
                                         Background="{Binding CurrentTheme.ToolTipColor, Mode=OneWay}"
                                         Foreground="{Binding CurrentTheme.ToolTipTextColor, Mode=OneWay}"/>
                            </RadioButton.ToolTip>
                        </RadioButton>
                        <RadioButton x:Name="GameType_EvE" Content="EvE" ToolTipService.InitialShowDelay="100" Grid.Row="3" Grid.Column="1"
                                 GroupName="Game_Type_GroupName" Checked="OnGameType_EvE_Checked">
                            <RadioButton.ToolTip>
                                <ToolTip Content="Computer vs Computer" Style="{StaticResource LargeToolTipStyle}"
                                         Background="{Binding CurrentTheme.ToolTipColor, Mode=OneWay}"
                                         Foreground="{Binding CurrentTheme.ToolTipTextColor, Mode=OneWay}"/>
                            </RadioButton.ToolTip>
                        </RadioButton>
                    </Grid>
                    <Separator Background ="Black"/>

                    
                    <!--COMPUTER DIFFFICULTY-->
                    <TextBlock FontWeight="DemiBold">Computer difficulty:</TextBlock>
                    <Grid Width="170">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="75"></ColumnDefinition>
                            <ColumnDefinition Width="95"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25"></RowDefinition>
                            <RowDefinition Height="25"></RowDefinition>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Grid.Column="0">White:</TextBlock>
                        <ComboBox x:Name="WhiteSide_Difficulty_ComboBox" 
                                  ItemsSource="{extensionNamespace:EnumBindingSource_Extension difficultyNamespace:Difficulty}"
                                  SelectedItem="{Binding WhiteSideComputerDifficulty, Mode=TwoWay}"
                                  IsEnabled="False"
                                  SelectionChanged="OnSelectionChanged_Difficulty_Combobox"
                                  Grid.Row="0" Grid.Column="1" Width="90">

                        </ComboBox>
                        <TextBlock  Grid.Row="1" Grid.Column="0">Black:</TextBlock>
                        <ComboBox x:Name="BlackSide_Difficulty_ComboBox" 
                                  ItemsSource="{extensionNamespace:EnumBindingSource_Extension difficultyNamespace:Difficulty}"
                                  SelectedItem="{Binding BlackSideComputerDifficulty, Mode=TwoWay}"
                                  IsEnabled="False" 
                                  SelectionChanged="OnSelectionChanged_Difficulty_Combobox"
                                  Grid.Row="1" Grid.Column="1" Width="90">
                        </ComboBox>
                    </Grid>
                    <Separator Background ="Black"/>

                    
                    <!--TIMER-->
                    <CheckBox x:Name="Timer_CheckBox" IsChecked="{Binding IsTimerOn, Mode=TwoWay}"
                              FontWeight="DemiBold">Timer</CheckBox>
                    <Grid Width="290" Height="49" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="75"></ColumnDefinition>
                            <ColumnDefinition Width="45"></ColumnDefinition>
                            <ColumnDefinition Width="170"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="3"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="3"></RowDefinition>
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="1" Grid.Column="0">For White:</TextBlock>
                        <TextBox x:Name="White_Timer_TextBox" Grid.Row="1" Grid.Column="1" Width="40" 
                                 IsEnabled="{Binding ElementName=Timer_CheckBox, Path=IsChecked}"
                                 PreviewTextInput="PreviewTextInput_Timer_TextBox" 
                                 PreviewKeyDown="PreviewKeyDown_IgnoreSpaces_TextBox"
                                 Text="{Binding ElementName=BlackTimerDuration_Slider, Path=Value, Mode=OneWay}"
                                 
                                 ></TextBox>
                        <Slider Grid.Row="1" Grid.Column="2" x:Name="BlackTimerDuration_Slider"
                                Width="150" HorizontalAlignment="Left" Height="20" TickFrequency="10" 
                                Minimum="100" Maximum="3600" Value="600" TickPlacement="BottomRight"
                                IsEnabled="{Binding ElementName=Timer_CheckBox, Path=IsChecked}"
                                Margin="4,0,0,0"
                                IsSnapToTickEnabled="True"
                                AutoToolTipPlacement="BottomRight" 
                                ></Slider>
                        
                        <TextBlock  Grid.Row="3" Grid.Column="0">For Black:</TextBlock>
                        <TextBox x:Name="Black_Timer_TextBox" Grid.Row="3" Grid.Column="1" Width="40"
                                 Text="{Binding ElementName=WhiteTimerDuration_Slider, Path=Value, Mode=OneWay}"
                                 IsEnabled="{Binding ElementName=Timer_CheckBox, Path=IsChecked}"
                                 PreviewTextInput="PreviewTextInput_Timer_TextBox" 
                                  PreviewKeyDown="PreviewKeyDown_IgnoreSpaces_TextBox"></TextBox>

                        <Slider Grid.Row="3" Grid.Column="2" x:Name="WhiteTimerDuration_Slider"
                                Width="150" HorizontalAlignment="Left" Height="20" TickFrequency="10" 
                                Minimum="100" Maximum="3600" Value="600" TickPlacement="BottomRight"
                                IsEnabled="{Binding ElementName=Timer_CheckBox, Path=IsChecked}"
                                Margin="4,0,0,0"
                                IsSnapToTickEnabled="True"
                                AutoToolTipPlacement="BottomRight"
                                ></Slider>
                    </Grid>
                    
                    
                    <!--MOVES LIMIT-->
                    <Separator Background ="Black"/>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox x:Name="MovesLimit_CheckBox" FontWeight="DemiBold" IsChecked="{Binding IsMovesLimitOn, Mode=TwoWay}">Moves limit</CheckBox>

                    </StackPanel>


                    <Grid Width="290" Height="26" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"></ColumnDefinition>
                            <ColumnDefinition Width="35"></ColumnDefinition>
                            <ColumnDefinition Width="170"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="3"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="3"></RowDefinition>
                        </Grid.RowDefinitions>


                        <TextBlock Grid.Row="1" Grid.Column="0">Limit:</TextBlock>
                        <TextBox x:Name="MovesLimit_TextBox" Grid.Row="1" Grid.Column="1"
                                    Margin="0,0,0,0" Width="30" 
                                 Text="{Binding ElementName=MovesLimit_Slider, Path=Value, Mode=OneWay}"
                                 IsEnabled="{Binding ElementName=MovesLimit_CheckBox, Path=IsChecked}"
                                 PreviewTextInput="PreviewTextInput_MovesLimit_TextBox"
                                  PreviewKeyDown="PreviewKeyDown_IgnoreSpaces_TextBox"></TextBox>
                        <Slider Grid.Row="1" Grid.Column="2" x:Name="MovesLimit_Slider"
                                Width="150" HorizontalAlignment="Left" Height="20" TickFrequency="1" 
                                Minimum="1" Maximum="500" Value="100" TickPlacement="BottomRight"
                                IsEnabled="{Binding ElementName=MovesLimit_CheckBox, Path=IsChecked}"
                                Margin="4,0,0,0"
                                IsSnapToTickEnabled="True"
                                AutoToolTipPlacement="BottomRight" 
                                ></Slider>

                    </Grid>
                    
                    
                    
                    
                    <Separator Background ="Black"/>

                    
                    <!--FOG OF WAR-->
                    <CheckBox FontWeight="DemiBold" x:Name="FogOfWar_CheckBox" IsChecked="{Binding IsFogOfWarOn, Mode=TwoWay}">Fog of war</CheckBox>

                    
                    <!--CLASSIC BOARD GAME-->
                    <Separator Background ="Black"/>
                    <MenuItem Header="Classic board" x:Name="StartClassicBoardGame_MenuItem" 
                              Click="OnClick_StartClassicBoardGame"
                              Background="Coral"></MenuItem>
                    <Separator Background ="Black"/>

                    
                    <!--CUSTOM BOARDS-->
                    <MenuItem x:Name="CustomBoards_MenuItem" Header="Custom boards" Background="#9bf743">
                    </MenuItem>


                    <!--TESTING BOARDS-->
                    <MenuItem x:Name="TestingBoards_MenuItem" Header="Testing boards" Background="#ee81e2" ></MenuItem>
                </MenuItem>
               

                <MenuItem Header="File"  BorderThickness="1" BorderBrush="Black" >

                    <MenuItem Header="Save Game" Background="LightBlue" Click="OnClick_SaveGame"></MenuItem>
                    <MenuItem Header="Load Game" Background="Yellow" Click="OnClick_LoadGame"></MenuItem>
                </MenuItem>

                
                <!--SETTINGS-->
                <MenuItem Header="Settings" BorderThickness="1" BorderBrush="Black" >

                    <StackPanel Orientation="Horizontal" Background="{Binding Path=CurrentTheme.DarkBoardCellColor, Mode=OneWay}">
                        <TextBlock>Theme:</TextBlock>
                        <ComboBox x:Name="Theme_ComboBox"
                              ItemsSource="{Binding Themes, Mode=OneWay}"
                              SelectedItem="0"
                              SelectionChanged="OnSelectionChanged_Themes_ComboBox"
                              DisplayMemberPath="Name"
                                  Margin="3,0,0,0"></ComboBox>
                    </StackPanel>
                    <Separator Background ="Black"/>

                    <CheckBox  IsChecked="{Binding IsSoundOn, Mode=TwoWay}" Checked="OnChecked_PlaySound">Sound</CheckBox>
                    <CheckBox x:Name="BoardScoreVisibility_Switcher"
                                IsChecked="True">Board Score</CheckBox>


                </MenuItem>

                <MenuItem Header="Help" BorderThickness="1" BorderBrush="Black">
                    <MenuItem x:Name="GameRules_MenuItem" Header="Game rules"></MenuItem>
                    <MenuItem x:Name="NewGameHelp_MenuItem" Header="New game"></MenuItem>
                    <MenuItem x:Name="ConstructorHelp_MenuItem" Header="Constructor"></MenuItem>
                    <MenuItem x:Name="FileHelp_MenuItem" Header="File"></MenuItem>
                </MenuItem>
                
                <MenuItem Header="About" BorderThickness="1" BorderBrush="Black">
                    <MenuItem x:Name="Application_MenuItem" Header="Application"></MenuItem>
                    <MenuItem x:Name="Contacts_MenuItem" Header="Contacts"></MenuItem>
                </MenuItem>

                

                <MenuItem Header="Exit" BorderThickness="1" BorderBrush="Black" Click="OnClick_Exit"></MenuItem>
            </Menu>
            
            

            <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="14" Text="Analyzed Boards Count: "
                               Foreground="{Binding CurrentTheme.TextColor, Mode=OneWay}"></TextBlock>
                    <TextBlock x:Name="Analyzed_Boards_Count" Foreground="{Binding CurrentTheme.TextColor, Mode=OneWay}"
                               FontSize="14" Text="{Binding GameSession.AnalizedBoardsCount}"></TextBlock>
                </StackPanel>

                <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="14" Text="Gamemode: "
                               Foreground="{Binding CurrentTheme.TextColor, Mode=OneWay}"></TextBlock>
                    <TextBlock FontSize="14" Text="{Binding GameSession.CurrentGameMode, Mode=OneWay}"
                               Foreground="{Binding CurrentTheme.TextColor, Mode=OneWay}"></TextBlock>
                </StackPanel>
            </StackPanel>
            
            
            <!--CURRENT PLAYER-->
            <StackPanel Grid.Row="1" Grid.Column="1" 
                        HorizontalAlignment="Center" VerticalAlignment="Top" 
                        Orientation="Horizontal" 
                        Margin="0,0,0,5">
                <TextBlock FontSize="30" 
                           VerticalAlignment="Top" Margin="0,0,0,5"
                           Foreground="{Binding CurrentTheme.TextColor, Mode=OneWay}"
                           Text="Player move:"/>
                
                <Border BorderThickness="1" BorderBrush="Black"
                        CornerRadius="10"
                        Width="40" Height="40"
                        Margin="5,0,0,0"
                        Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}">
                    
                    <Image x:Name="CurrentPlayer_Image" Source="{Binding GameSession.CurrentPlayerImageSource, Mode=OneWay}" Width="50" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6" >
                            
                            </ScaleTransform>
                        </Image.RenderTransform>
                        <Image.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"></Point>
                        </Image.RenderTransformOrigin>
                    </Image>
                </Border>
            </StackPanel>

            <!--GRID-->
            <Border x:Name="GameGrid_Border" Grid.Row="2" Grid.Column="1" Height="320" Width="320" BorderThickness="2" BorderBrush="Black">
                <Grid>
                    <UniformGrid x:Name="GameGrid" SnapsToDevicePixels="True" RenderOptions.BitmapScalingMode="HighQuality" Background="White">

                    </UniformGrid>

                    <Border Width="{Binding ElementName=GameGrid_Border, Path=Width}" Height="{Binding ElementName=GameGrid_Border, Path=Height}"
                             Name="DelayScreen_Border"  Background="{StaticResource Overlay_Color}" Visibility="Hidden"
                             RenderOptions.EdgeMode="Aliased" Opacity="1">
                        <TextBlock x:Name="Overlay_Textblock" Text="Switching player in: 3" Foreground="Red" Background="LightYellow"
                                   VerticalAlignment="Center" HorizontalAlignment="Center"  FontWeight="DemiBold" TextWrapping="Wrap"
                                   FontSize="20" ></TextBlock>
                    </Border>
                </Grid>
            </Border>

            
            <!--PROMOTION BLOCK AND TIMERS-->
            <Border x:Name="Promotion_Border" Grid.Row="2" Grid.Column="2" BorderThickness="1" BorderBrush="Black" Visibility="Visible" HorizontalAlignment="Center"
                    Margin="0,0,0,0" VerticalAlignment="Center" Width="150" CornerRadius="10" Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}">
                <StackPanel Orientation="Vertical">

               <!-- <Border x:Name="SecondPlayer_Timer_Container" Height="32"
                        Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                        BorderBrush="Black" BorderThickness="1">-->
                        <!--<TextBlock x:Name="Timer_BlackTeam"  VerticalAlignment="Center" FontSize="28" HorizontalAlignment="Center" 
                                   Visibility="{Binding GameSession.IsTimerOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource Number_ToTime_Converter}}"
                                   Foreground="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource TimeLeft_ToColor_Converter}}"
                                   ></TextBlock>-->

                    <!--<TextBlock x:Name="Timer_BlackTeam"  VerticalAlignment="Center" 
                               FontSize="28" HorizontalAlignment="Center" 
                                Height="32"
                                   Visibility="{Binding GameSession.IsTimerOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource Number_ToTime_Converter}}"
                                   Foreground="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource TimeLeft_ToColor_Converter}}"
                                   ></TextBlock>-->
                    <!--</Border>-->


                    <Border Background="Transparent" x:Name="SecondPlayer_Timer_Container" BorderThickness="0" Height="32">
                        <TextBlock x:Name="Timer_BlackTeam"  VerticalAlignment="Center" 
                               FontSize="28" HorizontalAlignment="Center" 
                                   Visibility="{Binding GameSession.IsTimerOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource Number_ToTime_Converter}}"
                                   Foreground="{Binding GameSession.TimeLeftForBlack, Converter={StaticResource TimeLeft_ToColor_Converter}}"
                                   ></TextBlock>
                    </Border>



                    <ScrollViewer IsEnabled="True"  Height="250">
                        <Border BorderThickness="1" BorderBrush="Black" Width="150" MinHeight="150" 
                                Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}">

                            <StackPanel Visibility="{Binding GameSession.IsPromotionNow, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        MinHeight="250">

                                <TextBlock Height="20" FontSize="15" FontWeight="DemiBold" HorizontalAlignment="Center" Margin="5">Promote to:</TextBlock>


                                <WrapPanel x:Name="Promotion_Stackpanel" Orientation="Horizontal"  MinHeight="250"
                                Width="150"  HorizontalAlignment="Center" 
                               >
                                </WrapPanel>
                            </StackPanel>
                        </Border>
                    </ScrollViewer>


                    <Border x:Name="MainPlayer_Timer_Container" BorderThickness="0" Background="Transparent" Height="32">
                        <TextBlock x:Name="Timer_WhiteTeam"  VerticalAlignment="Center" HorizontalAlignment="Center"
                               FontSize="28"
                                   Visibility="{Binding GameSession.IsTimerOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding GameSession.TimeLeftForWhite, Converter={StaticResource Number_ToTime_Converter}}"
                                   Foreground="{Binding GameSession.TimeLeftForWhite, Converter={StaticResource TimeLeft_ToColor_Converter}}">

                        </TextBlock>
                    </Border >



                    <!--<Border x:Name="MainPlayer_Timer_Container" Height="32"
                        Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                        BorderBrush="Black" BorderThickness="1">
                        
                        <TextBlock x:Name="Timer_WhiteTeam"  VerticalAlignment="Center" HorizontalAlignment="Center"
                               FontSize="28"
                                   Visibility="{Binding GameSession.IsTimerOn, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Text="{Binding GameSession.TimeLeftForWhite, Converter={StaticResource Number_ToTime_Converter}}"
                                   Foreground="{Binding GameSession.TimeLeftForWhite, Converter={StaticResource TimeLeft_ToColor_Converter}}"
                                   Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"></TextBlock>
                </Border>-->
            </StackPanel>
                    
            </Border>




            <Grid Grid.Row="2" Grid.Column="0">
                <Grid.RowDefinitions >
                    <RowDefinition Height="60"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="60"></RowDefinition>
                </Grid.RowDefinitions>

                <!--BEATEN PIECES WHITE-->
                <Border Grid.Row="0" x:Name="SecondPlayer_BeatenPiecesContainer" 
                        Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                        CornerRadius="10"
                        BorderThickness="1" BorderBrush="Black" Height="50" Margin="10,5,10,5"
                        VerticalAlignment="Top">
                    <ItemsControl ItemsSource="{Binding GameSession.BeatenPieces_White}" x:Name="BeatenPieces_White" Margin="3">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel   
                                             IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Image Source="{Binding GetDistinguishName, Converter={StaticResource ChessPieceName_ToImage_Converter}}" Width="20" Height="20" 
                                        RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>



                <!--<Border Grid.Row ="0"  x:Name="SecondPlayer_BeatenPiecesContainer" BorderThickness="1" BorderBrush="Black" Height="50" Margin="10,5,10,5" VerticalAlignment="Top" Background="LightYellow">
                    <WrapPanel Name="BeatenPieces_White"  Orientation="Horizontal" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality"></WrapPanel>
                </Border>-->

                <!--BEATEN PIECES BLACK-->
                <Border Grid.Row="2" x:Name="MainPlayer_BeatenPiecesContainer" 
                        CornerRadius="10"
                        Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}" 
                        BorderThickness="1" 
                        BorderBrush="Black" Height="50" Margin="10,5,10,5"
                        VerticalAlignment="Bottom">
                    <ItemsControl ItemsSource="{Binding GameSession.BeatenPieces_Black}" x:Name="BeatenPieces_Black" Margin="3">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel   IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Image Source="{Binding GetDistinguishName, Converter={StaticResource ChessPieceName_ToImage_Converter}}" Width="20" Height="20"
                                        RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality"/>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Border>

                <!--                    <WrapPanel Name="BeatenPieces_Black"  Orientation="Horizontal" RenderOptions.EdgeMode="Aliased"
                               RenderOptions.BitmapScalingMode="HighQuality"></WrapPanel>-->
                
                
                
                <!--UNDO/REDO/WINNER STACKPANEL-->
                <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,10,0" Width="230">

                    <TextBlock x:Name="GameWinner" FontSize="20" Margin="0,0,0,5" HorizontalAlignment="Center"
                               Visibility="{Binding GameSession.IsGameOver, Converter={StaticResource BooleanToVisibilityConverter}}"
                               Foreground="Red">Game Continues</TextBlock>

                    <DataGrid  Height="105"   Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                                AutoGenerateColumns="False" x:Name="MovesList_DataGrid"
                                      HeadersVisibility="Column" CanUserDeleteRows="False" 
                                CanUserAddRows="False" VerticalScrollBarVisibility="Auto" BorderBrush="Black"
                                   BorderThickness="1" ItemsSource="{Binding GameSession.UndoList, Mode=OneWay}"
                                  CanUserSortColumns="False" AreRowDetailsFrozen="True" CanUserReorderColumns="False" CanUserResizeRows="False" 
                               AlternationCount="2"
                                CanUserResizeColumns="False"
                                Visibility="{Binding IsMovesUndoListShouldBeShown, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                >

                        <DataGrid.Columns >
                            <DataGridTextColumn Width="27" Header="#" IsReadOnly="True"   FontWeight="SemiBold"
                                                    Binding="{Binding Executed_OnMove, Mode=OneWay}" ></DataGridTextColumn>
                            <DataGridTextColumn  Header="Piece" IsReadOnly="True"
                                                    Binding="{Binding Get_Executor, Mode=OneWay}" ></DataGridTextColumn>
                            <DataGridTextColumn Header="Move"
                                                    Binding="{Binding Get_MoveCoding, Mode=OneWay}" CanUserSort="False"></DataGridTextColumn>
                            <DataGridTextColumn Header="Type" IsReadOnly="True" CanUserResize="False" Width="*"  
                                                    Binding="{Binding Get_MoveType, Mode=OneWay}" CanUserSort="False">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="DataGridCell">
                                        <Setter Property="ToolTip" Value="{Binding Get_MoveType}"></Setter>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Style.Triggers>
                                    <Trigger Property="AlternationIndex" Value="0">
                                        <Setter Property="Background"
                                                Value="{Binding DataContext.CurrentTheme.LightBoardCellColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </Trigger>
                                    <Trigger Property="AlternationIndex" Value="1">
                                        <Setter Property="Background"
                                                Value="{Binding DataContext.CurrentTheme.DarkBoardCellColor, RelativeSource={RelativeSource AncestorType=Window}}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                    </DataGrid>

                    <StackPanel Orientation="Horizontal" Height="60" Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Image Source="Assets/undo.png" Width="60" Height="60"  MouseLeftButtonDown="OnClick_Undo" ToolTipService.InitialShowDelay="150">
                            <Image.ToolTip>
                                <ToolTip Content="Undo last move" Style="{StaticResource LargeToolTipStyle}"
                                         Background="{Binding CurrentTheme.ToolTipColor, Mode=OneWay}"
                                         Foreground="{Binding CurrentTheme.ToolTipTextColor, Mode=OneWay}"/>
                            </Image.ToolTip>
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" >
                                </ScaleTransform>
                            </Image.RenderTransform>
                            <Image.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"></Point>
                            </Image.RenderTransformOrigin>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>


                        <Image Source="Assets/redo.png"
                               Width="60" Height="60"
                               MouseLeftButtonDown="OnClick_Redo" 
                               ToolTipService.InitialShowDelay="150">
                            <Image.ToolTip>
                                <ToolTip Content="Redo last move" Style="{StaticResource LargeToolTipStyle}"
                                         Background="{Binding CurrentTheme.ToolTipColor, Mode=OneWay}"
                                         Foreground="{Binding CurrentTheme.ToolTipTextColor, Mode=OneWay}"/>
                            </Image.ToolTip>
                            <Image.RenderTransform>
                                <ScaleTransform ScaleX="1" ScaleY="1" >
                                </ScaleTransform>
                            </Image.RenderTransform>
                            <Image.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Image.RenderTransformOrigin>
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="0.5"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </StackPanel>

                </StackPanel>
            </Grid>






             <!--SCORE-->
            <Border Grid.Row="3" Grid.Column="1" CornerRadius="10" 
                    Background="{Binding CurrentTheme.LightBoardCellColor, Mode=OneWay}"
                    Visibility ="{Binding ElementName=BoardScoreVisibility_Switcher, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"
                    BorderThickness="1" BorderBrush="Black"
                    Height="50" Width="300" HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid x:Name="BoardScore_Grid" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"></ColumnDefinition>
                        <ColumnDefinition Width="35"></ColumnDefinition>
                        <ColumnDefinition Width="90"></ColumnDefinition>
                        <ColumnDefinition Width="35"></ColumnDefinition>
                        <ColumnDefinition Width="70"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                

                    <StackPanel Grid.Column="0" Orientation="Horizontal" HorizontalAlignment="Right">
                        <TextBlock x:Name="Black_Score" FontSize="17"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,2,0"
                                   Text="{Binding GameSession.BlackSide_Score, Mode=OneWay}"></TextBlock>
                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,3" FontSize="27">:</TextBlock>
                    </StackPanel>
                    <Image Grid.Column="1" Source="Assets/Black_King.png" Width="30" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6" >
                            </ScaleTransform>
                        </Image.RenderTransform>
                        <Image.RenderTransformOrigin>
                            <Point X="0.6" Y="0.6"></Point>
                        </Image.RenderTransformOrigin>
                    </Image>
                    <TextBlock Text="SCORE" FontWeight="Bold"
                               FontSize="30" VerticalAlignment="Center" 
                               HorizontalAlignment="Center" Grid.Column="2"
                               Foreground="Black"
                               ></TextBlock>
                    <Image Grid.Column="3" Source="Assets/White_King.png" Width="30" RenderOptions.EdgeMode="Aliased" RenderOptions.BitmapScalingMode="HighQuality">
                        <Image.RenderTransform>
                            <ScaleTransform ScaleX="0.6" ScaleY="0.6" >
                            </ScaleTransform>
                        </Image.RenderTransform>
                        <Image.RenderTransformOrigin>
                            <Point X="0.6" Y="0.6"></Point>
                        </Image.RenderTransformOrigin>
                    </Image>
                    <StackPanel Grid.Column="4" Orientation="Horizontal">
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,3" FontSize="27"
                                   Foreground="Black">:</TextBlock>
                        <TextBlock x:Name="White_Score" FontSize="17" 
                                   Text="{Binding GameSession.WhiteSide_Score, Mode=OneWay}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2,3,0,0" Grid.Column="4"></TextBlock>
                    </StackPanel>
                </Grid>
            </Border>


            <!--START GAME BUTTON-->
            <Button x:Name="StartGame_Button" Grid.Column="0" Grid.Row="3" Margin="30,5,30,0" Width="190" Height="38" 
                    Content="Start Game" FontSize="19" FontWeight="DemiBold" Click="OnClick_StartGame" Visibility="Hidden"
                    HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource RoundButton_Style}">
            </Button>
            
        </Grid>
        
    </Viewbox>
</Window>
